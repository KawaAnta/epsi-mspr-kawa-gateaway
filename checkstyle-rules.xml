<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <module name="TreeWalker">
        <!-- Vérifie le nom des methode pour correspondre au format myClass-->
        <module name="MethodName">
            <property name="format" value="^[a-z](_?[a-zA-Z0-9]+)*$"/>
            <property name="allowClassName" value="true"/>
        </module>

        <!-- https://checkstyle.sourceforge.io/checks/design/onereturncheck.html -->
        <module name="ReturnCount">
            <property name="max" value="3"/>
            <property name="maxForVoid" value="0"/>
        </module>

        <!-- https://checkstyle.sourceforge.io/checks/indentation/indentation.html -->
        <module name="Indentation">
            <property name="basicOffset" value="4"/>
            <property name="braceAdjustment" value="0"/>
            <property name="caseIndent" value="4"/>
            <property name="lineWrappingIndentation" value="8"/>
        </module>

        <!-- https://checkstyle.sourceforge.io/checks/metrics/cyclomaticcomplexity.html -->
        <module name="CyclomaticComplexity">
            <property name="max" value="10"/>
        </module>

        <!-- Vérifie le nom des paramètres dans un try catch -->
        <module name="CatchParameterName">
            <property name="format" value="^[a-z][a-zA-Z0-9]+$"/>
        </module>
        <!-- https://checkstyle.sourceforge.io/checks/naming/constantname.html -->
        <module name="ConstantName">
            <property name="format"
                      value="^log(ger)?$|^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
        </module>
        <!-- https://checkstyle.sourceforge.io/checks/naming/methodname.html -->
        <module name="MethodName">
            <property name="format" value="^[a-zA-Z](_?[a-zA-Z0-9]+)*$"/>
            <property name="allowClassName" value="false"/>
        </module>
        <!-- https://checkstyle.sourceforge.io/checks/naming/parametername.html -->
        <module name="ParameterName">
            <property name="format" value="^[a-z][a-zA-Z0-9]+$"/>
        </module>
        <!-- https://checkstyle.sourceforge.io/checks/blocks/emptyblock.html#EmptyBlock -->
        <module name="EmptyBlock">
            <property name="tokens" value="LITERAL_DEFAULT"/>
        </module>
        <!-- https://checkstyle.sourceforge.io/checks/blocks/needbraces.html#NeedBraces -->
        <module name="NeedBraces">
            <property name="tokens" value="LITERAL_IF, LITERAL_ELSE"/>
        </module>
        <!--https://checkstyle.sourceforge.io/checks/blocks/rightcurly.html#RightCurly-->
        <module name="RightCurly"/>
        <!--https://checkstyle.sourceforge.io/checks/blocks/leftcurly.html#LeftCurly-->
        <module name="LeftCurly"/>
        <!--https://checkstyle.sourceforge.io/checks/coding/noarraytrailingcomma.html-->
        <module name="NoArrayTrailingComma"/>
        <!--https://checkstyle.sourceforge.io/checks/coding/unnecessaryparentheses.html-->
        <module name="UnnecessaryParentheses"/>
        <!-- https://checkstyle.sourceforge.io/checks/coding/unusedlocalvariable.html -->
        <module name="UnusedLocalVariable"/>
        <!-- https://checkstyle.sourceforge.io/checks/misc/arraytypestyle.html#ArrayTypeStyle -->
        <module name="ArrayTypeStyle"/>
        <!--https://checkstyle.sourceforge.io/checks/misc/commentsindentation.html-->
        <module name="CommentsIndentation"/>
        <!--https://checkstyle.sourceforge.io/checks/whitespace/whitespaceafter.html-->
        <module name="WhitespaceAfter">
            <property name="tokens" value="COMMA, SEMI"/>
        </module>
        <!-- Définit les règles d'espacement avant / après -->
        <!-- https://checkstyle.sourceforge.io/checks/whitespace/whitespacearound.html -->
        <module name="WhitespaceAround">
            <property name="tokens"
                      value="ASSIGN, ARRAY_INIT, BAND, BAND_ASSIGN, BOR,
                             BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR,
                             BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, DO_WHILE, EQUAL, GE,
                             LAMBDA, LAND, LCURLY, LITERAL_CATCH, LITERAL_DO,
                             LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF,
                             LITERAL_RETURN, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY,
                             LITERAL_WHILE, LOR, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN,
                             NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL,
                             SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, LITERAL_ASSERT,
                             TYPE_EXTENSION_AND, WILDCARD_TYPE, ELLIPSIS"
            />
            <property name="allowEmptyTypes" value="true"/>
        </module>

        <!-- Vérifie les espaces après la virgule dans les paramètres de méthode -->
        <module name="MethodParamPad">
            <property name="allowLineBreaks" value="true"/>
        </module>

    </module>

    <!-- Spécifie la longueur maximale autorisée pour une ligne -->
    <module name="LineLength">
        <property name="max" value="100"/>
        <property name="ignorePattern" value="^import.*|^package.*"/>
    </module>
</module>
